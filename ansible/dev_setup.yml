---
- hosts: localhost
  become: yes  # to run tasks as sudo
  tasks:
    - block:
      - name: Install the 'Development tools' package group
        ansible.builtin.yum:
          name: "@Development tools"
          state: present

      - name: Install prereq rpm packages
        ansible.builtin.yum:
          name: "{{ packages }}"
          state: present
        vars:
          packages:
            - curl
            - file
            - git
            - procps-ng

      - name: Install Fedora 30+ rpm package
        ansible.builtin.yum:
          name: libxcrypt-compat
          state: present
        when:
          - ansible_distribution == "Fedora"
          - ansible_distribution_major_version >= "30"
      when:
        - (ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "dnf") and (ansible_os_family == "RedHat" or ansible_os_family == "Rocky")

    - block:
      - name: Install prereq deb packages
        ansible.builtin.apt:
          update_cache: true
          name: "{{ packages }}"
          state: present
        vars:
          packages:
            - build-essential
            - curl
            - file
            - git
            - procps
      when:
        - ansible_pkg_mgr == "apt" and ansible_os_family == "Debian"

    - block:
      - name: Install the 'Development tools' package group using zypper
        ansible.builtin.zypper:
          name: "devel_basis"
          state: present

      - name: Install prereq rpm packages using zypper
        ansible.builtin.zypper:
          name: "{{ packages }}"
          state: present
        vars:
          packages:
            - curl
            - file
            - git
            - procps
      when:
        - ansible_pkg_mgr == "zypper" and ansible_os_family == "Suse"

    - block:
      - name: Install Homebrew on macOS
        shell: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        args:
          warn: no
        become: no
        tags: homebrew

      when: ansible_os_family == "Darwin"

    - block:
      - name: Clone Homebrew GitHub repo
        ansible.builtin.git:
          repo: https://github.com/Homebrew/brew.git
          dest: "/home/{{ lookup('env', 'USER') }}/.linuxbrew/Homebrew"
          version: master
        become_user: "{{ lookup('env', 'USER') }}"

      - name: Create bin directory for brew
        ansible.builtin.file:
          path: "/home/{{ lookup('env', 'USER') }}/.linuxbrew/bin"
          state: directory
          owner: "{{ lookup('env', 'USER') }}"
          group: "{{ lookup('env', 'USER') }}"
        become: no

      - name: Create a symbolic link for brew
        ansible.builtin.file:
          src: "/home/{{ lookup('env', 'USER') }}/.linuxbrew/Homebrew/bin/brew"
          dest: "/home/{{ lookup('env', 'USER') }}/.linuxbrew/bin/brew"
          owner: "{{ lookup('env', 'USER') }}"
          group: "{{ lookup('env', 'USER') }}"
          state: link
        become: no

      - name: Get the user shell
        shell: |
          set -o pipefail
          egrep "^{{ lookup('env', 'USER') }}:" /etc/passwd | awk -F: '{ print $7 }' | awk -F/ '{print $3}'
        args:
          executable: /bin/bash
        changed_when: false
        register: user_shell
        become: no

      - name: Add homebrew path to system-wide $PATH for bash shell (Debian OS Family).
        ansible.builtin.lineinfile:
          path: "/home/{{ lookup('env', 'USER') }}/.profile"
          line: "PATH=$PATH:~/.linuxbrew/bin"
          owner: "{{ lookup('env', 'USER') }}"
          mode: 0644
          create: yes
        when:
          - user_shell.stdout == "bash" and ansible_os_family == "Debian"
        become: no

      - name: Add homebrew path to system-wide $PATH for bash shell (RedHat OS Family).
        ansible.builtin.lineinfile:
          path: "/home/{{ lookup('env', 'USER') }}/.bash_profile"
          line: "PATH=$PATH:~/.linuxbrew/bin"
          owner: "{{ lookup('env', 'USER') }}"
          mode: 0644
          create: yes
        when:
          - user_shell.stdout == "bash" and ansible_os_family == "RedHat"
        become: no

      - name: Add homebrew path to system-wide $PATH for fish shell.
        ansible.builtin.copy:
          dest: "/home/{{ lookup('env', 'USER') }}/.config/fish/conf.d/brew.fish"
          content: "set -gx PATH $PATH /home/{{ lookup('env', 'USER') }}/.linuxbrew/bin"
          owner: "{{ lookup('env', 'USER') }}"
          mode: 0644
        when: user_shell.stdout == "fish"
        become: no

      - name: Add homebrew path to system-wide $PATH for zsh shell.
        ansible.builtin.lineinfile:
          path: "/home/{{ lookup('env', 'USER') }}/.zprofile"
          line: "PATH=$PATH:~/.linuxbrew/bin"
          owner: "{{ lookup('env', 'USER') }}"
          mode: 0644
          create: yes
        when: user_shell.stdout == "zsh"
        become: no

      when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

    - name: Install gcc
      community.general.homebrew:
        name: gcc
        state: present
      become: no

    - name: Install nvm
      community.general.homebrew:
        name: nvm
        state: present
      become: no

    - name: Install tfenv
      community.general.homebrew:
        name: tfenv
        state: present
      become: no

    - name: Install pyenv
      community.general.homebrew:
        name: pyenv
        state: present
      become: no

    - name: Install fzf
      community.general.homebrew:
        name: fzf
        state: present
      become: no

    - name: Install awscli
      community.general.homebrew:
        name: awscli
        state: present
      become: no

    - name: Install kubectl
      community.general.homebrew:
        name: kubectl
        state: present
      become: no

    - name: Install kubectx
      community.general.homebrew:
        name: kubectx
        state: present
      become: no

    - name: Install k9s
      community.general.homebrew:
        name: k9s
        state: present
      become: no

    - name: Install ipython
      community.general.homebrew:
        name: ipython
        state: present
      become: no

    - name: Install jq
      community.general.homebrew:
        name: jq
        state: present
      become: no

    - name: Install yq
      community.general.homebrew:
        name: yq
        state: present
      become: no

    - name: Install lazygit
      community.general.homebrew:
        name: lazygit
        state: present
      become: no

    - name: Install bitwarden-cli
      community.general.homebrew:
        name: bitwarden-cli
        state: present
      become: no

    - name: Install oh-my-bash
      shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"
      args:
        warn: no  # This suppresses warnings about using shell instead of a module
      become: no
      when:
        - user_shell.stdout == "bash" and ansible_os_family == "Debian"

    - name: Install oh-my-zsh
      shell: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        warn: no  # This suppresses warnings about using shell instead of a module
      become: no
      when:
        - user_shell.stdout == "zsh" and ansible_os_family == "Darwin"
