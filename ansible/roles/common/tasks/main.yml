---
- name: Install tfenv
  git:
    repo: https://github.com/tfutils/tfenv.git
    dest: "{{ ansible_env.HOME }}/.tfenv"
  become: no

- name: Add tfenv to PATH (macOS)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'export PATH="$HOME/.tfenv/bin:$PATH"'
  become: no
  when: is_macos == 'true'

- name: Add tfenv to PATH (Linux)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: 'export PATH="$HOME/.tfenv/bin:$PATH"'
  become: no
  when: is_linux == 'true'

- name: Install nvm
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
  become: no

- name: Install Starship
  shell: curl -sS https://starship.rs/install.sh | sh -s -- -y
  args:
    creates: "{{ ansible_env.HOME }}/.local/bin/starship"
  become: no

- name: Configure Starship for shell (macOS)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: 'eval "$(starship init zsh)"'
  become: no
  when: is_macos == 'true'

- name: Configure Starship for shell (Linux)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: 'eval "$(starship init bash)"'
  become: no
  when: is_linux == 'true'

- name: Install Oh My Zsh (macOS)
  shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
  args:
    creates: "{{ ansible_env.HOME }}/.oh-my-zsh"
  become: no
  when: is_macos == 'true'

- name: Install Oh My Bash (Linux)
  shell: bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"
  args:
    creates: "{{ ansible_env.HOME }}/.oh-my-bash"
  become: no
  when: is_linux == 'tre'

- name: Ensure .zshrc exists (macOS)
  file:
    path: "{{ ansible_env.HOME }}/.zshrc"
    state: touch
  when: is_macos == 'true'

- name: Ensure .bashrc exists (Linux)
  file:
    path: "{{ ansible_env.HOME }}/.bashrc"
    state: touch
  when: is_linux == 'true'

- name: Add nvm configuration to shell (macOS)
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  when: is_macos == 'true'

- name: Add nvm configuration to shell (Linux)
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      export NVM_DIR="$HOME/.nvm"
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
      [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
  when: is_linux == 'true'

- name: Configure aliases for common tools (macOS)
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    block: |
      # Common aliases
      alias tf='terraform'
      alias lg='lazygit'
      alias k='kubectl'
      alias kx='kubectx'
      alias kn='kubens'
      alias d='docker'
      alias dc='docker-compose'
      alias g='git'
      alias py='python'
      alias pip='pip'
      
      # Useful shortcuts
      alias ll='ls -lah'
      alias c='clear'
      alias h='history'
      alias update='brew update && brew upgrade'
    marker: "# {mark} ANSIBLE MANAGED BLOCK - COMMON ALIASES"
  when: is_macos == 'true'

- name: Configure aliases for common tools (Linux)
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      # Common aliases
      alias tf='terraform'
      alias lg='lazygit'
      alias k='kubectl'
      alias kx='kubectx'
      alias kn='kubens'
      alias d='docker'
      alias dc='docker-compose'
      alias g='git'
      alias py='python'
      alias pip='pip'
      
      # Useful shortcuts
      alias ll='ls -lah'
      alias c='clear'
      alias h='history'
      
      # Git shortcuts
      alias gs='git status'
      alias ga='git add'
      alias gc='git commit'
      alias gp='git push'
      alias gpl='git pull'
      alias gl='git log --oneline --graph --decorate'
    marker: "# {mark} ANSIBLE MANAGED BLOCK - COMMON ALIASES"
  when: is_linux == 'true'

- name: Ensure aliases are loaded in .zshrc (macOS)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    line: '[ -f ~/.zsh_aliases ] && source ~/.zsh_aliases'
  when: is_macos == 'true'

- name: Ensure aliases are loaded in .bashrc (Linux)
  lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: '[ -f ~/.bash_aliases ] && source ~/.bash_aliases'
  when: is_linux == 'true'

- name: Set editor to micro (Linux)
  blockinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    block: |
      export EDITOR=micro
  when: is_linux == 'true'

- name: Set editor to micro (macOS)
  blockinfile:
    path: "{{ ansible_env.HOME }}/.zshrc"
    block: |
      export EDITOR=micro
  when: is_macos == 'true'
